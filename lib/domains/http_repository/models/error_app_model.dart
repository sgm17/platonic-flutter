import 'package:flutter_gen/gen_l10n/app_localizations.dart';
import 'package:flutter/material.dart';

class ErrorApp {
  final String code;

  const ErrorApp({required this.code});

  String getError(BuildContext context) {
    switch (code) {
      case 'invalidemail':
        return AppLocalizations.of(context)!.invalidemail;
      case 'userdisabled':
        return AppLocalizations.of(context)!.userdisabled;
      case 'usernotfound':
        return AppLocalizations.of(context)!.usernotfound;
      case 'wrongpassword':
        return AppLocalizations.of(context)!.wrongpassword;
      case 'emailalreadyinuse':
        return AppLocalizations.of(context)!.emailalreadyinuse;
      case 'operationnotallowed':
        return AppLocalizations.of(context)!.operationnotallowed;
      case 'weakpassword':
        return AppLocalizations.of(context)!.weakpassword;
      case 'credentialalreadyinuse':
        return AppLocalizations.of(context)!.credentialalreadyinuse;
      case 'invalidcredential':
        return AppLocalizations.of(context)!.invalidcredential;
      case 'accountexistswithdifferentcredential':
        return AppLocalizations.of(context)!
            .accountexistswithdifferentcredential;
      case 'requiresrecentlogin':
        return AppLocalizations.of(context)!.requiresrecentlogin;
      case 'provideralreadylinked':
        return AppLocalizations.of(context)!.provideralreadylinked;
      case 'nosuchprovider':
        return AppLocalizations.of(context)!.nosuchprovider;
      case 'invalidverificationcode':
        return AppLocalizations.of(context)!.invalidverificationcode;
      case 'invalidverificationid':
        return AppLocalizations.of(context)!.invalidverificationid;
      case 'missingverificationcode':
        return AppLocalizations.of(context)!.missingverificationcode;
      case 'quotaexceeded':
        return AppLocalizations.of(context)!.quotaexceeded;
      case 'sessionexpired':
        return AppLocalizations.of(context)!.sessionexpired;
      case 'internalerror':
        return AppLocalizations.of(context)!.internalerror;
      case 'httpindexuniversities':
        return AppLocalizations.of(context)!.httpindexuniversities;
      case 'httpindexappuser':
        return AppLocalizations.of(context)!.httpindexappuser;
      case 'httpshowappuser':
        return AppLocalizations.of(context)!.httpshowappuser;
      case 'httpcreateappuser':
        return AppLocalizations.of(context)!.httpcreateappuser;
      case 'httpupdateappuser':
        return AppLocalizations.of(context)!.httpupdateappuser;
      case 'httpdestroyappuser':
        return AppLocalizations.of(context)!.httpdestroyappuser;
      case 'httpupdatecloudtokenappuser':
        return AppLocalizations.of(context)!.httpupdatecloudtokenappuser;
      case 'httpindexmeet':
        return AppLocalizations.of(context)!.httpindexmeet;
      case 'httpdestroymeet':
        return AppLocalizations.of(context)!.httpdestroymeet;
      case 'httpindexstories':
        return AppLocalizations.of(context)!.httpindexstories;
      case 'httpshowstories':
        return AppLocalizations.of(context)!.httpshowstories;
      case 'httpcreatestories':
        return AppLocalizations.of(context)!.httpcreatestories;
      case 'httpspamtories':
        return AppLocalizations.of(context)!.httpspamtories;
      case 'httpfavouritestories':
        return AppLocalizations.of(context)!.httpfavouritestories;
      case 'httpdeletestories':
        return AppLocalizations.of(context)!.httpdeletestories;
      case 'httpindexconversations':
        return AppLocalizations.of(context)!.httpindexconversations;
      case 'httpdestroyconversations':
        return AppLocalizations.of(context)!.httpdestroyconversations;
      case 'httpcreatevisualization':
        return AppLocalizations.of(context)!.httpcreatevisualization;
      case 'httpcreateimage':
        return AppLocalizations.of(context)!.httpcreateimage;
      case 'httpcreatemultipleimages':
        return AppLocalizations.of(context)!.httpcreatemultipleimages;
      case 'httpdeleteflat':
        return AppLocalizations.of(context)!.httpdeleteflat;
      case 'httpindexflats':
        return AppLocalizations.of(context)!.httpindexflats;
      case 'httphomeflat':
        return AppLocalizations.of(context)!.httphomeflat;
      case 'httpshowflat':
        return AppLocalizations.of(context)!.httpshowflat;
      case 'httpposttenant':
        return AppLocalizations.of(context)!.httpposttenant;
      case 'httpbookmark':
        return AppLocalizations.of(context)!.httpbookmark;
      case 'httpcreateflat':
        return AppLocalizations.of(context)!.httpcreateflat;
      case 'httpcreateflatspam':
        return AppLocalizations.of(context)!.httpcreateflatspam;
      case 'httpupdateflat':
        return AppLocalizations.of(context)!.httpupdateflat;
      case 'httpaddress':
        return AppLocalizations.of(context)!.httpaddress;
      case 'registeruniversitydialog':
        return AppLocalizations.of(context)!.registeruniversitydialog;
      case 'registerfacultydialog':
        return AppLocalizations.of(context)!.registerfacultydialog;
      case 'registerstudydialog':
        return AppLocalizations.of(context)!.registerstudydialog;
      case 'registernamerequireddialog':
        return AppLocalizations.of(context)!.registernamerequireddialog;
      case 'registernameonlylettersdialog':
        return AppLocalizations.of(context)!.registernameonlylettersdialog;
      case 'authemptyemaildialog':
        return AppLocalizations.of(context)!.authemptyemaildialog;
      case 'authvalidemaildialog':
        return AppLocalizations.of(context)!.authvalidemaildialog;
      case 'authemptypasswordialog':
        return AppLocalizations.of(context)!.authemptypasswordialog;
      case 'authshortpasswordialog':
        return AppLocalizations.of(context)!.authshortpasswordialog;
      case 'step1emptyaddress':
        return AppLocalizations.of(context)!.step1emptyaddress;
      case 'step2rentpermonth':
        return AppLocalizations.of(context)!.step2rentpermonth;
      case 'step2rentvalid':
        return AppLocalizations.of(context)!.step2rentvalid;
      case 'step2rentadvance':
        return AppLocalizations.of(context)!.step2rentadvance;
      case 'step2rentadvancevalid':
        return AppLocalizations.of(context)!.step2rentadvancevalid;
      case 'step2costelectricity':
        return AppLocalizations.of(context)!.step2costelectricity;
      case 'step2electricityvalid':
        return AppLocalizations.of(context)!.step2electricityvalid;
      case 'step2availablefromempty':
        return AppLocalizations.of(context)!.step2availablefromempty;
      case 'step2dateformat':
        return AppLocalizations.of(context)!.step2dateformat;
      case 'step2datefuture':
        return AppLocalizations.of(context)!.step2datefuture;
      case 'step2dateyear':
        return AppLocalizations.of(context)!.step2dateyear;
      case 'step3built':
        return AppLocalizations.of(context)!.step3built;
      case 'step3builtnegative':
        return AppLocalizations.of(context)!.step3builtnegative;
      case 'step3floor':
        return AppLocalizations.of(context)!.step3floor;
      case 'step3floornegative':
        return AppLocalizations.of(context)!.step3floornegative;
      case 'step3featuresshort':
        return AppLocalizations.of(context)!.step3featuresshort;
      case 'step3transportation':
        return AppLocalizations.of(context)!.step3transportation;
      case 'step3transportationvalid':
        return AppLocalizations.of(context)!.step3transportationvalid;
      case 'step4adtitle':
        return AppLocalizations.of(context)!.step4adtitle;
      case 'step4adtitleshort':
        return AppLocalizations.of(context)!.step4adtitleshort;
      case 'step4addescription':
        return AppLocalizations.of(context)!.step4addescription;
      case 'step4addescriptionshort':
        return AppLocalizations.of(context)!.step4addescriptionshort;
      case 'step4emptyimages':
        return AppLocalizations.of(context)!.step4emptyimages;
    }
    return '';
  }
}
