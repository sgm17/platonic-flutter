import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:flutter/material.dart';
import 'package:intl/intl.dart';
import 'package:platonic/providers/flat_provider/providers.dart';
import 'widgets.dart';

/* Group available
    Autogenerated by FlutLab FTF Generator
  */
class RentAvailableFromInput extends ConsumerWidget {
  const RentAvailableFromInput({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    void onSaved(String? value) {
      if (value == null) return;

      final inputFormat = DateFormat('dd/MM/yyyy');
      DateTime? availableFrom;

      try {
        availableFrom = inputFormat.parse(value);
      } catch (e) {
        return;
      }

      final currentState = ref.read(flatCreateProvider);

      ref.read(flatCreateProvider.notifier).state =
          currentState.copyWith(availableFrom: availableFrom);
    }

    return TextFormField(
      onSaved: onSaved,
      validator: (value) {
        if (value == null || value.isEmpty) {
          return 'Date cannot be empty';
        }

        // Parse the input string to a DateTime object
        final inputFormat = DateFormat('dd/MM/yyyy');
        DateTime? date;
        try {
          date = inputFormat.parse(value);
        } catch (e) {
          return 'Invalid date format';
        }

        // Check if the date is in the future
        final now = DateTime.now();
        if (date.isBefore(now)) {
          return 'Date must be in the future';
        }

        // Check if the date is within the next year
        final maxDate = now.add(const Duration(days: 365));
        if (date.isAfter(maxDate)) {
          return 'Date must be within the next year';
        }

        // Validation passed
        return null;
      },
      textInputAction: TextInputAction.next,
      keyboardType: TextInputType.datetime,
      maxLines: 1,
      style: const TextStyle(
          height: 1.1530000141688757,
          fontSize: 14.0,
          fontFamily: 'Gilroy',
          fontWeight: FontWeight.w300,
          color: Color.fromARGB(255, 255, 255, 255)),
      decoration: InputDecoration(
        suffixIcon: const RentCalendarIconContainer(),
        hintText:
            'Available from ${DateFormat('dd/MM/yyyy').format(DateTime.now())}',
        hintStyle: TextStyle(color: Colors.grey[400]),
        counterText: "",
        errorStyle: const TextStyle(fontSize: 0.01),
        contentPadding: const EdgeInsets.symmetric(
          horizontal: 10.0,
        ),
        enabledBorder: OutlineInputBorder(
            borderRadius: BorderRadius.circular(10.0),
            borderSide: const BorderSide(
                color: Color.fromARGB(255, 43, 45, 46), width: 1.0)),
        focusedBorder: OutlineInputBorder(
          borderRadius: BorderRadius.circular(10.0),
          borderSide: const BorderSide(
              color: Color.fromARGB(255, 43, 45, 46), width: 1.0),
        ),
        errorBorder: OutlineInputBorder(
            borderRadius: BorderRadius.circular(10.0),
            borderSide: const BorderSide(color: Colors.red, width: 1.0)),
        focusedErrorBorder: OutlineInputBorder(
            borderRadius: BorderRadius.circular(10.0),
            borderSide: const BorderSide(color: Colors.red, width: 1.0)),
      ),
    );
  }
}
