import 'package:flutter_gen/gen_l10n/app_localizations.dart';
import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:platonic/domains/university_repository/src/models/models.dart';
import 'package:platonic/providers/university_provider/providers.dart';
import 'package:platonic/providers/user_provider/providers.dart';
import 'package:platonic/screens/dialog_screen/widgets/widgets.dart';
import 'package:platonic/screens/settings_screen/widgets/widgets.dart';
import 'package:platonic/providers/dialog_provider/providers.dart';

/* Frame university_dialog
    Autogenerated by FlutLab FTF Generator
  */
class UniversityDialogScreen extends ConsumerWidget {
  const UniversityDialogScreen({super.key});

  List<UniversitiesList> filterUniversities(
      {required List<UniversitiesList> universities,
      required String searchBarState}) {
    return searchBarState.trim().isEmpty
        ? universities
        : universities
            .where((uni) => uni.university.name
                .toLowerCase()
                .contains(searchBarState.toLowerCase()))
            .toList();
  }

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    final isMeetSettings = ref.watch(isMeetSettingsDialogProvider);
    final searchBarState = ref.watch(searchBarProvider);
    final universitiesListState = ref.watch(universitiesListProvider);

    final userState = ref.watch(appUserProvider);

    return Scaffold(
      backgroundColor: const Color.fromARGB(255, 27, 26, 29),
      body: SafeArea(
          child: universitiesListState.when(
        data: (data) {
          final filteredUniversities = filterUniversities(
              universities: data, searchBarState: searchBarState);
          return Padding(
            padding: const EdgeInsets.all(16.0),
            child:
                Column(crossAxisAlignment: CrossAxisAlignment.start, children: [
              SizedBox(
                height: 31.0,
                child: DialogTitle(
                    title: isMeetSettings
                        ? AppLocalizations.of(context)!
                            .universityDialogMeetTitle
                        : AppLocalizations.of(context)!
                            .universityDialogPersonalTitle),
              ),
              const SizedBox(
                height: 20.0,
              ),
              SizedBox(
                height: 20.0,
                child: SearchBar(
                  placeholder: AppLocalizations.of(context)!
                      .universityDialogSearchPlaceholder,
                ),
              ),
              const SizedBox(
                height: 32.0,
              ),
              Expanded(
                child: ListView.separated(
                  itemCount: filteredUniversities.length,
                  separatorBuilder: (context, index) {
                    return const SizedBox(
                      height: 8.0,
                    );
                  },
                  itemBuilder: (context, index) {
                    return GestureDetector(
                      onTap: () {
                        final university =
                            filteredUniversities[index].university;

                        if (isMeetSettings) {
                          ref
                              .read(appUserProvider.notifier)
                              .setUniversityToMeet(university);
                        } else {
                          ref
                              .read(appUserProvider.notifier)
                              .setUniversity(university);
                        }
                      },
                      child: OptionSelected(
                        isBlue: true,
                        isSelected: isMeetSettings
                            ? userState.universityToMeet?.id ==
                                filteredUniversities[index].university.id
                            : !isMeetSettings
                                ? userState.universityId ==
                                    filteredUniversities[index].university.id
                                : false,
                        name: filteredUniversities[index].university.name,
                      ),
                    );
                  },
                ),
              )
            ]),
          );
        },
        loading: () => const Center(
          child: CircularProgressIndicator(
            color: Color.fromARGB(255, 255, 255, 255),
          ),
        ),
        error: (error, stackTrace) {
          return Text(error.toString());
        },
      )),
    );
  }
}
