import 'package:platonic/screens/auth_screen/register_screen/widgets/widgets.dart';
import 'package:platonic/helpers/transform/transform.dart';
import 'package:flutter/material.dart';

/* Instance divider
    Autogenerated by FlutLab FTF Generator
  */
class DividerContainer extends StatelessWidget {
  const DividerContainer({super.key});

  @override
  Widget build(BuildContext context) {
    return SizedBox(
      width: 358.0,
      height: 18.0,
      child: Stack(
          fit: StackFit.expand,
          alignment: Alignment.center,
          clipBehavior: Clip.none,
          children: [
            Positioned(
              left: 0.0,
              top: 0.0,
              right: 0.0,
              bottom: 0.0,
              width: null,
              height: null,
              child: LayoutBuilder(
                  builder: (BuildContext context, BoxConstraints constraints) {
                final double width = constraints.maxWidth * 0.0782122905027933;

                final double height =
                    constraints.maxHeight * 1.2777777777777777;

                return Stack(children: [
                  TransformHelper.translate(
                      x: constraints.maxWidth * 0.4664804469273743,
                      y: 0,
                      z: 0,
                      child: SizedBox(
                        width: width,
                        height: height,
                        child: const OrText(),
                      ))
                ]);
              }),
            ),
            Positioned(
              left: 0.0,
              top: 0.0,
              right: 0.0,
              bottom: 0.0,
              width: null,
              height: null,
              child: LayoutBuilder(
                  builder: (BuildContext context, BoxConstraints constraints) {
                double percentWidth = 0.44692737430167595;
                double scaleX = (constraints.maxWidth * percentWidth) / 160.0;

                double percentHeight = 0.05555555555555555;
                double scaleY = (constraints.maxHeight * percentHeight) / 1.0;

                return Stack(children: [
                  TransformHelper.translateAndScale(
                      translateX: 0,
                      translateY: constraints.maxHeight * 0.5,
                      translateZ: 0,
                      scaleX: scaleX,
                      scaleY: scaleY,
                      scaleZ: 1,
                      child: const DividerLine1())
                ]);
              }),
            ),
            Positioned(
              left: 0.0,
              top: 0.0,
              right: 0.0,
              bottom: 0.0,
              width: null,
              height: null,
              child: LayoutBuilder(
                  builder: (BuildContext context, BoxConstraints constraints) {
                double percentWidth = 0.44692737430167595;
                double scaleX = (constraints.maxWidth * percentWidth) / 160.0;

                double percentHeight = 0.05555555555555555;
                double scaleY = (constraints.maxHeight * percentHeight) / 1.0;

                return Stack(children: [
                  TransformHelper.translateAndScale(
                      translateX: constraints.maxWidth * 0.553072625698324,
                      translateY: constraints.maxHeight * 0.5,
                      translateZ: 0,
                      scaleX: scaleX,
                      scaleY: scaleY,
                      scaleZ: 1,
                      child: const DividerLine2())
                ]);
              }),
            )
          ]),
    );
  }
}
