import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:platonic/helpers/transform/transform.dart';
import 'package:platonic/providers/user_provider/providers.dart';
import 'package:platonic/screens/settings_screen/widgets/widgets.dart';

/* Component switch
    Autogenerated by FlutLab FTF Generator
  */
class SwitchContainer extends ConsumerWidget {
  const SwitchContainer({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    final userState = ref.watch(appUserProvider);

    return GestureDetector(
      onTap: () {
        ref.read(appUserProvider.notifier).setMeetStatus();
      },
      child: SizedBox(
        width: 45.0,
        height: 25.0,
        child: Stack(
            fit: StackFit.expand,
            alignment: Alignment.center,
            clipBehavior: Clip.none,
            children: [
              Positioned(
                left: 0.0,
                top: 0.0,
                right: 0.0,
                bottom: 0.0,
                width: null,
                height: null,
                child: LayoutBuilder(builder:
                    (BuildContext context, BoxConstraints constraints) {
                  final double width = constraints.maxWidth;

                  final double height = constraints.maxHeight;

                  return Stack(children: [
                    TransformHelper.translate(
                        x: 0,
                        y: 0,
                        z: 0,
                        child: SizedBox(
                          width: width,
                          height: height,
                          child: userState.meetStatus == null
                              ? const SwitchBlueBackground()
                              : userState.meetStatus!
                                  ? const SwitchBlueBackground()
                                  : const SwitchWhiteBackground(),
                        ))
                  ]);
                }),
              ),
              Positioned(
                left: 0.0,
                top: 0.0,
                right: 0.0,
                bottom: 0.0,
                width: null,
                height: null,
                child: LayoutBuilder(builder:
                    (BuildContext context, BoxConstraints constraints) {
                  double percentWidth = 0.37777777777777777;
                  double scaleX = (constraints.maxWidth * percentWidth) / 17.0;

                  double percentHeight = 0.68;
                  double scaleY =
                      (constraints.maxHeight * percentHeight) / 17.0;

                  Matrix4 matrix4 = Matrix4.translationValues(
                      userState.meetStatus == null
                          ? constraints.maxWidth * 0.5333333333333333
                          : userState.meetStatus!
                              ? constraints.maxWidth * 0.5333333333333333
                              : constraints.maxWidth * 0.5333333333333333 / 5,
                      constraints.maxHeight * 0.16,
                      0);

                  return Stack(children: [
                    AnimatedContainer(
                      duration: const Duration(milliseconds: 200),
                      curve: Curves.easeInOut,
                      transform: matrix4,
                      child: TransformHelper.scale(
                          x: scaleX,
                          y: scaleY,
                          z: 1,
                          child: const SwitchSelect()),
                    )
                  ]);
                }),
              )
            ]),
      ),
    );
  }
}
