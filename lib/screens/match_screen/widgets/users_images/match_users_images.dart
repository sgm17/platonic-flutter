import 'package:flutter/material.dart';
import 'package:platonic/screens/match_screen/widgets/widgets.dart';

/* Group users_images
    Autogenerated by FlutLab FTF Generator
  */
class MatchUsersImages extends StatefulWidget {
  const MatchUsersImages({super.key});

  @override
  State<MatchUsersImages> createState() => _MatchUsersImagesState();
}

class _MatchUsersImagesState extends State<MatchUsersImages>
    with TickerProviderStateMixin {
  late AnimationController _controller1;
  late AnimationController _controller2;
  late Animation<double> _scaleAnimation1;
  late Animation<double> _scaleAnimation2;

  @override
  void initState() {
    super.initState();
    _controller1 = AnimationController(
        vsync: this,
        duration: const Duration(seconds: 2),
        reverseDuration: const Duration(seconds: 2));

    _controller2 = AnimationController(
        vsync: this,
        duration: const Duration(seconds: 2),
        reverseDuration: const Duration(seconds: 2));

    _scaleAnimation1 = Tween<double>(begin: 1, end: 1.1).animate(
      CurvedAnimation(
        parent: _controller1,
        curve: const Interval(0.5, 1, curve: Curves.bounceInOut),
      ),
    );
    _scaleAnimation2 = Tween<double>(begin: 1, end: 1.1).animate(
      CurvedAnimation(
        parent: _controller2,
        curve: const Interval(0, 0.5, curve: Curves.bounceInOut),
      ),
    );

    _controller1.addStatusListener((status) {
      if (status == AnimationStatus.completed) {
        _controller1.reverse();
      } else if (status == AnimationStatus.dismissed) {
        _controller1.forward();
      }
    });
    _controller2.addStatusListener((status) {
      if (status == AnimationStatus.completed) {
        _controller2.reverse();
      } else if (status == AnimationStatus.dismissed) {
        _controller2.forward();
      }
    });
    _controller1.forward();
  }

  @override
  void dispose() {
    _controller1.dispose();
    _controller2.dispose();
    super.dispose();
  }

  @override
  void didChangeDependencies() {
    super.didChangeDependencies();
    _controller1.forward();
    _controller2.forward();
  }

  @override
  Widget build(BuildContext context) {
    return SizedBox(
      width: 260.0,
      height: 225.2942352294922,
      child: Stack(
          fit: StackFit.expand,
          alignment: Alignment.center,
          clipBehavior: Clip.none,
          children: [
            Positioned(
              left: 0.0,
              top: 0.0,
              right: null,
              bottom: null,
              width: 140.0,
              height: 140.0,
              child: ScaleTransition(
                  scale: _scaleAnimation1, child: MatchProfileImage()),
            ),
            Positioned(
              left: 100.0,
              top: 60.0,
              right: null,
              bottom: null,
              width: 160.0,
              height: 160.0,
              child: ScaleTransition(
                  scale: _scaleAnimation2, child: MatchOtherProfileImage()),
            ),
            Positioned(
              left: 127.0,
              top: 46.0,
              right: null,
              bottom: null,
              width: 32.0,
              height: 32.0,
              child: RotationTransition(
                  turns: _controller1, child: const MatchBigFavourite()),
            ),
            Positioned(
              left: 197.705810546875,
              top: 200.70578002929688,
              right: null,
              bottom: null,
              width: 24.588457107543945,
              height: 24.588457107543945,
              child: RotationTransition(
                  turns: _controller2, child: MatchSmallFavourite()),
            ),
          ]),
    );
  }
}
