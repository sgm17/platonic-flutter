import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:platonic/constants/constants.dart';
import 'package:platonic/domains/story_repository/src/models/story_model.dart';
import 'package:platonic/domains/university_repository/src/models/models.dart';
import 'package:platonic/domains/user_repository/src/models/app_user_model.dart';
import 'package:platonic/providers/create_provider/providers.dart';
import 'package:platonic/providers/story_provider/providers.dart';
import 'package:platonic/screens/create_screen/widgets/widgets.dart';
import 'package:flutter/material.dart';

/* Frame create
    Autogenerated by FlutLab FTF Generator
*/
class CreateScreen extends ConsumerWidget {
  const CreateScreen({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    final gradientIndexState = ref.watch(gradientIndexProvider);

    double width = MediaQuery.of(context).size.width;
    double height = MediaQuery.of(context).size.height;

    Future<void> toggleCreateCircular() async {
      final text = ref.read(createControllerProvider).text;

      final Story story = Story(
          id: 0,
          user: AppUser.emptyUser,
          faculty: const Faculty(id: 0, facultyName: ''),
          body: text,
          createdAt: DateTime.now(),
          favourite: false,
          alreadyConversation: false,
          ownStory: true,
          backgroundGradientIndex: gradients[gradientIndexState]);

      await ref.read(storiesProvider.notifier).createStory(story);
    }

    return Scaffold(
        resizeToAvoidBottomInset: false,
        backgroundColor: Colors.transparent,
        body: SafeArea(
            child: Container(
          decoration: BoxDecoration(gradient: gradients[gradientIndexState]),
          width: width,
          height: height,
          child: Column(children: [
            const Padding(
              padding: EdgeInsets.all(16.0),
              child: Align(
                alignment: Alignment.topRight,
                child: SizedBox(
                  width: 35.0,
                  height: 35.0,
                  child: CreateCloseButton(),
                ),
              ),
            ),
            const SizedBox(
              height: 16.0,
            ),
            const Expanded(
              child: CreateInput(),
            ),
            const SizedBox(
              height: 16.0,
            ),
            GestureDetector(
                onTap: toggleCreateCircular,
                child: const CreateCircularButton()),
            const SizedBox(
              height: 32.0,
            ),
            Container(
              alignment: Alignment.topCenter,
              height: 151.0,
              color: Colors.black,
              child: Padding(
                padding: const EdgeInsets.all(16.0),
                child: SizedBox(
                  height: 31.0,
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      SizedBox(
                        width: width / 4,
                        child: Container(),
                      ),
                      SizedBox(
                        width: width / 4,
                        child: const StoryTitle(),
                      ),
                      Container(
                        alignment: Alignment.centerRight,
                        width: width / 4,
                        child: GestureDetector(
                            onTap: () {
                              ref.read(gradientIndexProvider.notifier).state =
                                  (gradientIndexState + 1) % gradients.length;
                            },
                            child: BackgroundSelector(
                              gradient: gradients[gradientIndexState],
                            )),
                      ),
                    ],
                  ),
                ),
              ),
            ),
          ]),
        )));
  }
}
